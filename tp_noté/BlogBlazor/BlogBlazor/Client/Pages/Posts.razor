@page "/Posts"
@inject HttpClient Http
<h3>Nos publication</h3>

@if (categories != null)
{
    <div>
        <label>Filtrer la recherche</label>
        <select name="categoryFilter" id="categoryFilter">
            <option value="0"></option>
            @foreach (var item in categories)
            {
                <option value="@item.Id">@item.Name</option>
            }
        </select>
        <button class="btn btn-primary" @onclick="HandleFilter" type="submit">Filtrer</button>
    </div>
}

@if (posts == null)
{
    <div>loading...</div>
}
else
{
    if (posts.Count == 0)
    {
        <div>Aucun posts</div>
    }
    else
    {
        @foreach (var item in posts)
        {
            if (@item.PublicationDate <= DateTime.Now)
            {
                <div><p class="font-weight-bold">Name :</p> @item.Name</div>
                <div><p class="font-weight-bold">Description :</p> @item.Description</div>
                <div><p class="font-weight-bold">Date de création :</p> @item.PublicationDate</div>
                <div><p class="font-weight-bold">Contenu : </p> @item.Content</div>
                <div><p class="font-weight-bold">Catégorie :  </p> @item.Category.Name</div>
                <div><p class="font-weight-bold">Auteur : </p> @item.Author.ToString()</div>
            }
        }
    }
}

@code {
    private List<PostReadDTO> posts;
    private List<CategoryReadDTO> categories;
    EnvironmentVariableTarget category;

    protected async override Task OnInitializedAsync()
    {
        posts = await Http.GetFromJsonAsync<List<PostReadDTO>>("api/post");
        categories = await Http.GetFromJsonAsync<List<CategoryReadDTO>>("api/category");
    }

    protected async Task HandleFilter()
    {
    }
}