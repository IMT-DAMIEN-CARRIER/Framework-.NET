@page "/Posts"
@inject HttpClient Http
<h3>Nos publication</h3>

@if (_categories != null)
{
    <EditForm>
        <label>Filtrer la recherche</label>
        
        <InputSelect @bind-Value="_category">
            <option value="0"></option>
            @foreach (var item in _categories)
            {
                <option value="@item.Id">@item.Name</option>
            }
        </InputSelect>
        
        <button class="btn btn-primary" @onclick="HandleFilter" type="submit">Filtrer</button>
    </EditForm>
}
else
{
    <div>loading categories...</div>
}

@if (_posts == null)
{
    <div>loading posts...</div>
}
else
{
    if (_posts.Count == 0)
    {
        <div>Aucun posts</div>
    }
    else
    {
        @foreach (var item in _posts)
        {
            if (@item.PublicationDate <= DateTime.Now)
            {
                <div><p class="font-weight-bold">Name :</p> @item.Name</div>
                <div><p class="font-weight-bold">Description :</p> @item.Description</div>
                <div><p class="font-weight-bold">Date de création :</p> @item.PublicationDate</div>
                <div><p class="font-weight-bold">Contenu : </p> @item.Content</div>
                <div><p class="font-weight-bold">Catégorie :  </p> @item.Category.Name</div>
                <div><p class="font-weight-bold">Auteur : </p> @item.Author.ToString()</div>
            }
        }
    }
}

@code {
    private List<PostReadDTO> _posts;
    private List<CategoryReadDTO> _categories;
    CategoryReadDTO _category;

    protected async override Task OnInitializedAsync()
    {
        _posts = await Http.GetFromJsonAsync<List<PostReadDTO>>("api/post");
        _categories = await Http.GetFromJsonAsync<List<CategoryReadDTO>>("api/category");
    }

    protected async Task HandleFilter()
    {
        if (_category != null)
        {
            _posts = await Http.GetFromJsonAsync<List<PostReadDTO>>("api/post" + _category.Name);
        }
    }
}